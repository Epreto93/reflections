What happens when you initialize a repository? Why do you need to do it?

A .git directory that will contain commits is created. No commits are created at this point though. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The working directory contains your files, the  working directory contains commits - snapshots of your files at different times/edits, and the staging area contains snapshots of files before they are commited. The staging area is therefore kind of like an in between for the working directory and repository. the staging area allows you to specify exactly what changes should be committed. you can add files one at a time to the staging area, and therefore do not have to make a commit of everything in your working directory. You can also remove files from the staging area. 

How can you use the staging area to make sure you have one commit per logical change?
By only moving the files associated with that change to the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to try out a new experimental feature that you are still not sure will work or will be something you want to permanently add to your file. branches help in that you can continue on with your master branch and try something new/experimental on a completely different branch, not interfering with you master branch.

How do the diagrams help you visualize the branch structure?

The help you see what your log history looks like for each branch and how checking out previous commits and trying out experimental changes there doesn't effect the other branches. It also helps you understand the "detached head" warning.